// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  email     String      @id
  name      String
  status    String      @default("active")
  password  String

  // Relaciones
  loginAccess   LoginAccess[]
  securityLogs  SecurityLog[]
  roles         UserRole[]
}

model LoginAccess {
  loginIdAccess Int     @id @default(autoincrement())
  email         String
  date          DateTime @default(now())

  // Relación
  user User @relation(fields: [email], references: [email])
}

model SecurityLog {
  securityIdLog Int      @id @default(autoincrement())
  email         String
  date          DateTime @default(now())
  action        String
  description   String
  affectedTable String

  // Relación
  user User @relation(fields: [email], references: [email])
}

model Role {
  idRole Int    @id @default(autoincrement())
  rolName String
  status  String @default("active")

  users   UserRole[]
  windows RoleWindow[]
}

model Window {
  idWindow   Int    @id @default(autoincrement())
  windowName String
  status     String @default("active")

  roles RoleWindow[]
}

model UserRole {
  idRole Int
  email  String

  // Relaciones
  role Role @relation(fields: [idRole], references: [idRole])
  user User @relation(fields: [email], references: [email])

  @@id([idRole, email])
}

model RoleWindow {
  idRole   Int
  idWindow Int
  create   Int
  read     Int
  update   Int
  delete   Int

  // Relaciones
  role   Role   @relation(fields: [idRole], references: [idRole])
  window Window @relation(fields: [idWindow], references: [idWindow])

  @@id([idRole, idWindow])
}